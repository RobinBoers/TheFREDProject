{
	"block.minecraft.beehive": "Beeralis hive",
	"block.minecraft.bee_nest": "Beeralis Nest",
	"item.minecraft.bee_spawn_egg": "Beeralis Spawn Egg",
	"entity.minecraft.bee": "Beeralis",
	"subtitles.block.beehive.enter": "Beeralis enters hive",
	"subtitles.block.beehive.exit": "Beeralis leaves hive",
	"subtitles.entity.bee.hurt": "Beeralis hurts",
	"subtitles.entity.bee.loop": "Beeralis buzzes",
	"subtitles.entity.bee.loop_aggressive": "Beeralis buzzes angrily",
	"subtitles.entity.bee.pollinate": "Beeralis buzzes happily",
	"subtitles.entity.bee.sting": "Beeralis stings",
	"advancements.husbandry.safely_harvest_honey.title": "Bee Our Guest",
	"advancements.husbandry.safely_harvest_honey.description":  "Use a Campfire to collect Honey from a Beeralis hive using a Bottle without aggravating the beeralises",
	"advancements.husbandry.silk_touch_nest.title": "Total Bee(ralis)location",
	"advancements.husbandry.silk_touch_nest.description":  "Move a Beeralis Nest, with 3 beeralises inside, using Silk Touch",
	"item.minecraft.music_disc_13.desc": "Viva la Vida - Coldplay",
	"item.minecraft.music_disc_cat.desc": "All Falls Down - Alan Walker",
	"item.minecraft.music_disc_blocks.desc": "Hymn For The Weekend - Coldplay",
	"item.minecraft.music_disc_chirp.desc": "Darkside - Alan Walker",
	"item.minecraft.music_disc_far.desc": "Happier - Marsmellow",
	"item.minecraft.music_disc_mall.desc": "High On Life - Martin Garrix",
	"item.minecraft.music_disc_mellohi.desc": "---",
	"item.minecraft.music_disc_stal.desc": "All Around The World - R3HAB X A Touch Of Class",
	"item.minecraft.music_disc_strad.desc": "Faded - Alan Walker",
	"item.minecraft.music_disc_ward.desc": "Paradise - Coldplay",
	"item.minecraft.music_disc_11.desc": "De Missie - Kalvijn",
	"item.minecraft.music_disc_wait.desc": "Dance Monkey - Tones and I",
	"gameMode.hardcore": "Hardcore Mode! (deadly)",
  "selectServer.defaultName": "Robin is een zombie",
  "entity.minecraft.wither": "Bee Wither",
  "connect.failed": "Failed to connect to the server, stupid server",
  "disconnect.genericReason": "%s",
  "disconnect.disconnected": "Disconnected by Server, stupid server",
  "disconnect.lost": "Connection Lost, stupid server",
  "disconnect.kicked": "Was kicked from the game, stupid server",
  "disconnect.timeout": "Timed out, stupid server",
  "disconnect.closed": "Connection closed, stupid server",
  "disconnect.loginFailed": "Failed to log in, stupid server",
  "disconnect.loginFailedInfo": "Failed to log in: %s",
  "disconnect.loginFailedInfo.serversUnavailable": "The authentication servers are currently down for maintenance, stupid server",
  "disconnect.loginFailedInfo.invalidSession": "Invalid session (Try restarting your game and the stupid launcher)",
  "disconnect.quitting": "Quitting",
  "disconnect.endOfStream": "End of stream",
  "disconnect.overflow": "Buffer overflow",
  "disconnect.spam": "Kicked for spamming, stupid server",
  "soundCategory.master": "Master Volume",
  "soundCategory.music": "Music",
  "soundCategory.record": "Jukebox/Note Blocks",
  "soundCategory.weather": "Weather",
  "soundCategory.hostile": "Hostile Creatures",
  "soundCategory.neutral": "Friendly Creatures",
  "soundCategory.player": "Players",
  "soundCategory.block": "Blocks",
  "soundCategory.ambient": "Ambient/Environment",
  "soundCategory.voice": "Voice/Speech",
  "record.nowPlaying": "Now playing the best song: %s",
  "block.minecraft.bed.occupied": "This bed is occupied",
  "block.minecraft.bed.obstructed": "This bed is obstructed",
  "block.minecraft.bed.no_sleep": "You can sleep only at night and during thunderstorms",
  "block.minecraft.bed.too_far_away": "You may not rest now; the bed is too far away",
  "block.minecraft.bed.not_safe": "You may not rest now; there are monsters nearby",
  "block.minecraft.bed.not_valid": "Your home bed was missing or obstructed",
  "item.minecraft.music_disc_13": "Music Disc",
  "item.minecraft.music_disc_cat": "Music Disc",
  "item.minecraft.music_disc_blocks": "Music Disc",
  "item.minecraft.music_disc_chirp": "Music Disc",
  "item.minecraft.music_disc_far": "Music Disc",
  "item.minecraft.music_disc_mall": "Music Disc",
  "item.minecraft.music_disc_mellohi": "Music Disc",
  "item.minecraft.music_disc_stal": "Music Disc",
  "item.minecraft.music_disc_strad": "Music Disc",
  "item.minecraft.music_disc_ward": "Music Disc",
  "item.minecraft.music_disc_11": "Music Disc",
  "item.minecraft.music_disc_wait": "Music Disc",
  "item.minecraft.music_disc_13.desc": "Viva la Vida - Coldplay",
  "item.minecraft.music_disc_cat.desc": "All Falls Down - Alan Walker",
  "item.minecraft.music_disc_blocks.desc": "Hymn For The Weekend - Coldplay",
  "item.minecraft.music_disc_chirp.desc": "Darkside - Alan Walker",
  "item.minecraft.music_disc_far.desc": "Happier - Marsmellow",
  "item.minecraft.music_disc_mall.desc": "High On Life - Martin Garrix",
  "item.minecraft.music_disc_mellohi.desc": "---",
  "item.minecraft.music_disc_stal.desc": "All Around The World - R3HAB X A Touch Of Class",
  "item.minecraft.music_disc_strad.desc": "Faded - Alan Walker",
  "item.minecraft.music_disc_ward.desc": "Paradise - Coldplay",
  "item.minecraft.music_disc_11.desc": "De Missie - Kalvijn",
  "item.minecraft.music_disc_wait.desc": "Dance Monkey - Tones and I",
  "container.inventory": "Inventory",
  "container.hopper": "Item Hopper",
  "container.crafting": "Crafting",
  "container.dispenser": "Dispenser",
  "container.dropper": "Dropper",
  "container.furnace": "Furnace",
  "container.enchant": "Enchant",
  "container.smoker": "Smoker",
  "container.lectern": "Lectern",
  "container.blast_furnace": "Blast Furnace",
  "container.repair": "Repair & Name",
  "container.creative": "Item Selection",
  "container.brewing": "Brewing Stand",
  "container.chest": "Chest",
  "container.chestDouble": "Large Chest",
  "container.enderchest": "Ender Chest",
  "container.beacon": "Beacon",
  "container.shulkerBox": "Shulker Box",
  "container.barrel": "Barrel",
  "container.loom": "Loom",
  "container.grindstone_title": "Repair & Disenchant",
  "container.cartography_table": "Cartography Table",
  "container.stonecutter": "Stonecutter",
  "filled_map.mansion": "Woodland Explorer Map",
  "filled_map.monument": "Ocean Explorer Map",
  "filled_map.buried_treasure": "Buried Treasure Map",
  "filled_map.unknown": "Unknown Map",
  "death.fell.accident.ladder": "%1$s was stupid and fell off a ladder",
  "death.fell.accident.vines": "%1$s was stupid and fell off some vines",
  "death.fell.accident.water": "%1$s was stupid and fell out of the water",
  "death.fell.accident.generic": "%1$s was stupid and fell from a high place",
  "death.fell.killer": "%1$s was doomed to fall",
  "death.fell.assist": "%1$s was doomed to fall by %2$s",
  "death.fell.assist.item": "%1$s was doomed to fall by %2$s using %3$s",
  "death.fell.finish": "%1$s fell too far and was finished by %2$s",
  "death.fell.finish.item": "%1$s fell too far and was finished by %2$s using %3$s",
  "death.attack.lightningBolt": "%1$s was struck by lightning, poor guy",
  "death.attack.lightningBolt.player": "%1$s was struck by lightning whilst fighting %2$s",
  "death.attack.inFire": "%1$s went up in flames",
  "death.attack.inFire.player": "%1$s walked into fire whilst fighting %2$s",
  "death.attack.onFire": "%1$s burned to death",
  "death.attack.onFire.player": "%1$s was burnt to a crisp whilst fighting %2$s",
  "death.attack.lava": "%1$s was stupid and tried to swim in lava",
  "death.attack.lava.player": "%1$s tried to swim in lava to escape %2$s",
  "death.attack.hotFloor": "%1$s was stupid and discovered the floor was lava",
  "death.attack.hotFloor.player": "%1$s walked into danger zone due to %2$s",
  "death.attack.inWall": "%1$s suffocated in a wall, poor guy",
  "death.attack.inWall.player": "%1$s suffocated in a wall whilst fighting %2$s",
  "death.attack.cramming": "%1$s was squished too much, hihi",
  "death.attack.cramming.player": "%1$s was squashed by %2$s",
  "death.attack.drown": "%1$s drowned, don't do that!",
  "death.attack.drown.player": "%1$s drowned whilst trying to escape %2$s",
  "death.attack.starve": "%1$s starved to death",
  "death.attack.starve.player": "%1$s starved to death whilst fighting %2$s",
  "death.attack.cactus": "%1$s was pricked to death",
  "death.attack.cactus.player": "%1$s walked into a cactus whilst trying to escape %2$s",
  "death.attack.generic": "%1$s died",
  "death.attack.generic.player": "%1$s died because of %2$s",
  "death.attack.explosion": "%1$s blew up...",
  "death.attack.explosion.player": "%1$s was blown up by %2$s",
  "death.attack.explosion.player.item": "%1$s was blown up by %2$s using %3$s",
  "death.attack.magic": "%1$s was killed by magic",
  "death.attack.even_more_magic": "%1$s was killed by even more magic",
  "death.attack.message_too_long": "Actually, message was too long to deliver fully. Sorry! Here's stripped version: %s",
  "death.attack.wither": "%1$s withered away, poor guy",
  "death.attack.wither.player": "%1$s withered away whilst fighting %2$s",
  "death.attack.anvil": "%1$s was squashed by a falling anvil",
  "death.attack.anvil.player": "%1$s was squashed by a falling anvil whilst fighting %2$s",
  "death.attack.fallingBlock": "%1$s was squashed by a falling block",
  "death.attack.fallingBlock.player": "%1$s was squashed by a falling block whilst fighting %2$s",
  "death.attack.mob": "%1$s was slain by %2$s",
  "death.attack.mob.item": "%1$s was slain by %2$s using %3$s",
  "death.attack.player": "%1$s was slain by %2$s",
  "death.attack.player.item": "%1$s was slain by %2$s using %3$s",
  "death.attack.arrow": "%1$s was shot by %2$s",
  "death.attack.arrow.item": "%1$s was shot by %2$s using %3$s",
  "death.attack.fireball": "%1$s was fireballed by %2$s",
  "death.attack.fireball.item": "%1$s was fireballed by %2$s using %3$s",
  "death.attack.thrown": "%1$s was pummeled by %2$s",
  "death.attack.thrown.item": "%1$s was pummeled by %2$s using %3$s",
  "death.attack.indirectMagic": "%1$s was killed by %2$s using magic",
  "death.attack.indirectMagic.item": "%1$s was killed by %2$s using %3$s",
  "death.attack.thorns": "%1$s was killed trying to hurt %2$s",
  "death.attack.thorns.item": "%1$s was killed by %3$s trying to hurt %2$s",
  "death.attack.trident": "%1$s was impaled by %2$s",
  "death.attack.trident.item": "%1$s was impaled by %2$s with %3$s",
  "death.attack.fall": "%1$s hit the ground too hard",
  "death.attack.fall.player": "%1$s hit the ground too hard whilst trying to escape %2$s",
  "death.attack.outOfWorld": "%1$s fell out of the world",
  "death.attack.outOfWorld.player": "%1$s didn't want to live in the same world as %2$s",
  "death.attack.dragonBreath": "%1$s was roasted in dragon breath",
  "death.attack.dragonBreath.player": "%1$s was roasted in dragon breath by %2$s",
  "death.attack.flyIntoWall": "%1$s experienced kinetic energy",
  "death.attack.flyIntoWall.player": "%1$s experienced kinetic energy whilst trying to escape %2$s",
  "death.attack.fireworks": "%1$s went off with a bang",
  "death.attack.fireworks.player": "%1$s went off with a bang whilst fighting %2$s",
  "death.attack.netherBed.message": "%1$s was killed by %2$s",
  "death.attack.netherBed.link": "Intentional Game Design",
  "death.attack.sweetBerryBush": "%1$s was poked to death by a sweet berry bush",
  "death.attack.sweetBerryBush.player": "%1$s was poked to death by a sweet berry bush whilst trying to escape %2$s",
  "death.attack.sting": "%1$s was stung to death",
  "death.attack.sting.player": "%1$s was stung to death by %2$s",
  "deathScreen.respawn": "Be jezus and go back",
  "deathScreen.spectate": "Spectate world",
  "deathScreen.titleScreen": "Title screen",
  "deathScreen.score": "Score",
  "deathScreen.title.hardcore": "Game over!",
  "deathScreen.title": "You are dead now!",
  "deathScreen.quit.confirm": "Are you sure you want to quit?"
}